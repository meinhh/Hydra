// <auto-generated />
using System;
using Hydra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Hydra.Migrations
{
    [DbContext(typeof(HydraContext))]
    [Migration("20180826104205_HydraMigration")]
    partial class HydraMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.1-rtm-30846")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Hydra.Models.Customer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.HasKey("ID");

                    b.ToTable("Customer");
                });

            modelBuilder.Entity("Hydra.Models.Employee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<string>("Name");

                    b.Property<string>("Phone");

                    b.Property<int?>("StoreID");

                    b.HasKey("ID");

                    b.HasIndex("StoreID");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("Hydra.Models.Order", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BuyerID");

                    b.Property<DateTime>("Date");

                    b.Property<int>("PaymentType");

                    b.Property<int?>("SellerID");

                    b.Property<int?>("StoreID");

                    b.HasKey("ID");

                    b.HasIndex("BuyerID");

                    b.HasIndex("SellerID");

                    b.HasIndex("StoreID");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("Hydra.Models.Product", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.Property<int?>("OrderID");

                    b.Property<double>("Price");

                    b.Property<int?>("StoreID");

                    b.HasKey("ID");

                    b.HasIndex("OrderID");

                    b.HasIndex("StoreID");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Hydra.Models.Store", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.HasKey("ID");

                    b.ToTable("Store");
                });

            modelBuilder.Entity("Hydra.Models.Employee", b =>
                {
                    b.HasOne("Hydra.Models.Store", "Store")
                        .WithMany("Employees")
                        .HasForeignKey("StoreID")
                        .HasConstraintName("EMPLOYEE_STORE_FK")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Hydra.Models.Order", b =>
                {
                    b.HasOne("Hydra.Models.Customer", "Buyer")
                        .WithMany()
                        .HasForeignKey("BuyerID");

                    b.HasOne("Hydra.Models.Employee", "Seller")
                        .WithMany()
                        .HasForeignKey("SellerID");

                    b.HasOne("Hydra.Models.Store")
                        .WithMany("Orders")
                        .HasForeignKey("StoreID");
                });

            modelBuilder.Entity("Hydra.Models.Product", b =>
                {
                    b.HasOne("Hydra.Models.Order")
                        .WithMany("Products")
                        .HasForeignKey("OrderID");

                    b.HasOne("Hydra.Models.Store")
                        .WithMany("Products")
                        .HasForeignKey("StoreID");
                });
#pragma warning restore 612, 618
        }
    }
}
